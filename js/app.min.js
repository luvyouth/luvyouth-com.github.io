/*
 * Project:        Neon Jungle - HTML5 Template
 * Version:        1.0
 * Author:         Neon Unicorns
 * Author ulr:     https://themeforest.net/user/neonunicorns
 */

"use strict";


/* -----------------------------
 * GLOBAL
 * ---------------------------*/
let NJ = {};


/* -----------------------------
 * SETTINGS
 * ---------------------------*/
NJ.settings = {
    on_scroll_animation: true,
    preloader: true,
    custom_cursor: true
};


/* -----------------------------
 * PRELOADER
 * ---------------------------*/
if (NJ.settings.preloader) {
    $("body").css("overflow", "hidden");


    /* Percentage Increment Animation */
    let perf_data = window.performance.timing;
    let est_time = -(perf_data.loadEventEnd - perf_data.navigationStart);
    let total_time = ((est_time / 1000) % 10) * 50;
    let current = 0;
    let increment = 100 > 0 ? 1 : -1;
    let step_time = Math.abs(Math.floor(total_time / 100));
    let timer = setInterval(function () {
        current += increment;
        $(".nj-preloader-percentage").html(current);
        if (current === 100) {
            clearInterval(timer);
        }
    }, step_time);
    setTimeout(function () {
        $('body').waitForImages(function () {
            setTimeout(function () {
                $(".nj-preloader-percentage").addClass("nj-loaded");
            }, 400);
            setTimeout(function () {
                $("#nj-preloader-wrapper").addClass("nj-loaded");
            }, 600);
        });
    }, total_time + 100);
}


/* -----------------------
 * MAIN FUNCTION
 * --------------------- */
(function ($) {

    /* Selectors */
    let $window = $(window);
    let $document = $(document);
    let $html = $("html, body");


    /* Tests */
    let page_has_three = false;


    /* Measurements */
    let document_width;
    let window_width;
    let window_height = window.innerHeight;


    /* Check if it's under 1024px width */
    function is_responsive_width() {
        return $('#nj-responsive-indicator').is(':visible');
    }


    /* Get size */
    $(window).on('resize', function () {
        window_width = $(window).width();
        document_width = $(document).width();
    });


    /* -----------------------------
     * Testimonials
     * ---------------------------*/
    NJ.testimonials = function () {
        let $testimonials = $("#nj-testimonials-slick");
        let $testimonials_arrow = $testimonials.parent().find(".nj-testimonials-slider-arrows");

        if ($testimonials.length) {
            $testimonials.slick({
                slidesToShow: 1,
                dots: false,
                nextArrow: $testimonials_arrow,
                prevArrow: null
            })
        }
    };


    /* -----------------------------
     * Our crew Slider
     * ---------------------------*/
    NJ.team_slider = function () {
        let $team_slider_section = $("#nj-our-crew");
        if ($team_slider_section.length) {
            let $slider = $team_slider_section.find(".nj-crew-slider");
            $slider.on("init", function (event, slick) {
                $slider.find(".slick-active").addClass("nj-slick-next-active");
            });
            $slider.slick({
                centerMode: true,
                centerPadding: '280px',
                infinite: true,
                slidesToShow: 1,
                prevArrow: $('.nj-crew-slider-prev-arrow'),
                nextArrow: $('.nj-crew-slider-next-arrow'),
                responsive: [
                    {
                        breakpoint: 1024,
                        settings: {
                            slidesToShow: 1,
                            infinite: true,
                            centerMode: true,
                            centerPadding: '100px',
                        }
                    },
                    {
                        breakpoint: 940,
                        settings: {
                            slidesToShow: 1,
                            infinite: true,
                            centerPadding: '90px',

                        }
                    },
                    {
                        breakpoint: 750,
                        settings: {
                            slidesToShow: 1,
                            infinite: true,
                            centerPadding: '60px',

                        }
                    },
                    {
                        breakpoint: 520,
                        settings: {
                            slidesToShow: 1,
                            infinite: true,
                            centerPadding: '10px',

                        }
                    }
                ]
            });
            $slider.on("beforeChange", function (event, slick, current_slide, next_slide) {
                let $all_slides = $(this).find(".slick-slide");
                $all_slides.removeClass("nj-slick-next-active");
                $(slick.$slides[next_slide]).addClass("nj-slick-next-active");
            });

            $slider.on("breakpoint", function (event, slick, breakpoint) {
                console.log(breakpoint)
            })
        }
    };


    /* -----------------------------
     * Scroll to link
     * ---------------------------*/
    NJ.scroll_to_link = function () {
        $("a.nj-scroll-to").click(function (e) {
            e.preventDefault();
            let $target = $($(this).attr("href"));
            if ($target.length) {
                $('html, body').animate({
                    scrollTop: $($(this).attr("href")).offset().top
                }, 1000);
            } else {
                window.location.href = "./index.html" + $(this).attr("href");
            }
        });
    };


    /* -----------------------------
     * Scroll spy
     * ---------------------------*/
    NJ.scroll_spy = function () {
        $(window).bind('scroll', function () {
            let elems = $(".section, footer");
            let window_top_position = $(window).scrollTop();
            let window_bottom_position = (window_top_position + $(window).height());

            elems.each(function (index) {
                let $section = $(this);
                let section_top_position = $section.offset().top - 200;
                let section_bottom_position = section_top_position + $section.height();


                /* Hover menu item */
                if (window_top_position >= section_top_position && window_top_position <= section_bottom_position) {
                    let id = $(this).attr('id');
                    let navElem = $('a[href="#' + id + '"]');
                    navElem.addClass('is-active').siblings().removeClass('is-active');
                }

                /* Change "scroll to top" button color */
                let $nj_scroll_to_top = $("a#nj-scroll-to-top");
                let scroll_to_top_button_offset = -220;
                if ((section_bottom_position >= window_top_position - scroll_to_top_button_offset) &&
                    (section_top_position <= window_bottom_position + scroll_to_top_button_offset)) {
                    let scroll_to_top_style = $(this).data('scroll-to-top-style');
                    if (scroll_to_top_style === "dark") {
                        if (!$nj_scroll_to_top.hasClass("nj-dark")) {
                            $nj_scroll_to_top.addClass("nj-dark");
                        }
                    } else {
                        $nj_scroll_to_top.removeClass("nj-dark");
                    }
                }

            });
        });
    };


    /* -----------------------------
     * Scroll to top
     * ---------------------------*/
    NJ.scroll_to_top = function () {
        let $back_to_top = $("#nj-scroll-to-top");
        $back_to_top.on("click", function (e) {
            e.stopPropagation();
            e.preventDefault();
            $html.animate({
                scrollTop: 0
            }, $window.scrollTop() / 3, "easeInOutQuart");
        });

        let $holder = $(".nj-scroll-to-top-holder");
        $window.on("scroll", function () {
            let thisScrollTop = $document.scrollTop();
            if (thisScrollTop > 1000) {
                $holder.addClass("nj-appear");
            } else {
                $holder.removeClass("nj-appear");
            }
        });
    };


    /* -----------------------------
     * Mobile menu
     * ---------------------------*/
    NJ.mobile_menu = function () {
        let $document_body = $(document.body);
        let $show_menu_button = $("#nj-show-menu-button");
        let $menu = $("#nj-mobile-menu");
        let menu_anim_time = 400;


        /* Show menu */
        function show_menu() {
            $document_body.addClass("nj-mobile-menu-show");
            $show_menu_button.addClass("active");
            $menu.addClass("show");

            setTimeout(function () {
                $document_body.addClass("nj-mobile-three-before");
                $document_body.addClass("nj-mobile-three");
            }, menu_anim_time);
        }


        /* Hide menu */
        function hide_menu() {
            $document_body.removeClass("nj-mobile-three-before");
            $document_body.removeClass("nj-mobile-menu-show");

            setTimeout(function () {
                $document_body.removeClass("nj-mobile-three");
                $show_menu_button.removeClass("active");
                $menu.removeClass("show");
            }, menu_anim_time / 2);
        }


        /* Add event listener */
        $show_menu_button.on("click", function () {
            if (!$document_body.hasClass("nj-mobile-menu-show")) {
                show_menu();
            } else {
                hide_menu();
            }
        });

        let $mobile_menu_item = $(".nj-mobile-menu-item");
        $mobile_menu_item.on("click", function () {
            setTimeout(function () {
                hide_menu();
            }, menu_anim_time);
        });

    };


    /* -----------------------------
     * Portfolio
     * ---------------------------*/
    NJ.portfolio = function () {
        let $portfolio = $("#nj-portfolio-grid");
        let $items = $portfolio.find(".nj-portfolio-item");
        let $filters = $("#nj-portfolio-filters");

        if ($portfolio.length) {
            $portfolio.waitForImages(function () {
                $filters.on("click", "a.nj-portfolio-filter", function (e) {
                    e.preventDefault();
                    let $this = $(this);
                    let target = $this.attr('href');
                    $this.parent().siblings().find("a").removeClass('is-active');
                    $this.addClass("is-active");
                    filter($items, target)
                });


                /* Portfolio filtering */
                function filter(items, filter) {
                    items = items || '*';

                    let matches = [];
                    let hiddenMatched = [];
                    let visibleUnmatched = [];


                    /* Test each item */
                    for (let i = 0; i < items.length; i++) {
                        let item = items[i];
                        let isMatched = !!$(item).data("filter").includes(filter);

                        /* Add to matches if its a match */
                        if (isMatched) {
                            matches.push(item);
                        }

                        /* Add to additional group if item needs to be hidden or revealed */
                        if (isMatched && item.isHidden) {
                            hiddenMatched.push(item);
                        } else if (!isMatched && !item.isHidden) {
                            visibleUnmatched.push(item);
                        }
                    }

                    $(visibleUnmatched).hide();
                    $(matches).show();
                    $portfolio.masonry('layout');
                }

                $portfolio.masonry({
                    itemSelector: '.nj-portfolio-item',
                    columnWidth: '.nj-grid-sizer',
                    percentPosition: true,
                    transitionDuration: '1s'
                });

                $portfolio.masonry('layout');
            })
        }
    };


    /* -----------------------
    * On Scroll Animation
    * --------------------- */
    NJ.on_scroll_animation = function () {
        let $animated_sections = $(".nj-animated-section");

        if ($animated_sections.length) {

            /* Hide all elements */
            $animated_sections.each(function () {
                let $elements = $(this).find("[data-anim-type]");
                $elements.css("opacity", 0);
            });


            /* Animation */
            let on_scroll_animation = function () {

                /* Renew selector */
                $animated_sections = $(".nj-animated-section:not(.nj-animated)");

                /* Get measurements */
                let window_top_position = $window.scrollTop();
                let window_bottom_position = (window_top_position + window_height);

                /* Working with sections */
                $animated_sections.each(function () {
                    let $section = $(this),
                        section_height = $section.outerHeight(),
                        section_top_position = $section.offset().top,
                        section_bottom_position = (section_top_position + section_height);

                    if ((section_bottom_position >= window_top_position) &&
                        (section_top_position <= window_bottom_position)) {


                        /* Work with each element in section */
                        let $elements = $section.find("[data-anim-type]");
                        $elements.each(function () {
                            let $element = $(this);

                            /* Get item queue number for calculating delay */
                            let num = $element.data("anim-queue");

                            /* Get animation type */
                            let anim = $element.data("anim-type");
                            if ($element.data('anim-queue')) {
                                window.setTimeout(function () {
                                    $element.addClass('nj_animated ' + anim);
                                }, parseInt(num, 10) * 100);
                            } else {
                                $element.addClass('nj_animated ' + anim);
                            }
                        });

                        $section.addClass('nj_animated');
                    }
                });
            };


            /* Check if in view and animate */
            $window.on('scroll', function () {
                on_scroll_animation();
            });
            on_scroll_animation();
        }
    };


    /* -----------------------
    * Popups
    * --------------------- */
    NJ.single_project_popups = function () {
        let $image_wrapper = $(".nj-single-project-image-wrapper");
        if ("undefined" !== typeof $.magnificPopup && $image_wrapper.length) {
            $image_wrapper.magnificPopup({
                delegate: 'a',
                type: 'image',
                tLoading: 'Loading image ...',
                mainClass: 'mfp-img-mobile',
                gallery: {
                    enabled: true,
                    navigateByImgClick: true,
                    preload: [0, 1]
                },
                image: {
                    tError: '<a href="%url%">The image #%curr%</a> could not be loaded.',
                },
            });
        }
    };


    /* -----------------------
    * Custom cursor
    * --------------------- */
    NJ.custom_cursor = {
        _x: 0,
        _y: 0,
        __x: (window.innerWidth / 2),
        __y: (window.innerHeight / 2),
        _is_visible: false,
        _cursor_follower_delay: 6,
        _cursor_follower_margin: 0,
        _cursor_follower_selector: null,

        init: function () {
            this._cursor_follower_selector = document.getElementById('nj-cursor-follower');
            this._cursor_follower_selector.style.transform = 'translate(-50%, -50%) scale(1)';
            this.setup_cursor();
            this.animate_cursor_follower();
        },

        toggle_visibility: function () {
            let self = this;
            if (self._is_visible) {
                self._cursor_follower_selector.style.opacity = 1;
            } else {
                self._cursor_follower_selector.style.opacity = 0;
            }
        },

        setup_cursor: function () {
            let self = this;

            // Main event listener
            document.addEventListener('mousemove', function (e) {
                // Show the cursor
                self._is_visible = true;
                self.toggle_visibility();
                self.__x = e.clientX;
                self.__y = e.clientY;
            });

            // Color change
            document.querySelectorAll('[data-cursor-style="dark"]').forEach(function (el) {
                el.addEventListener('mouseover', function () {
                    self._cursor_follower_selector.classList.add("nj-cursor-follower-dark");
                });
                el.addEventListener('mouseout', function () {
                    self._cursor_follower_selector.classList.remove("nj-cursor-follower-dark");
                });
            });

            // Hover effect
            document.querySelectorAll('[data-cursor-effect="hover"]').forEach(function (el) {
                el.addEventListener('mouseover', function () {
                    self._cursor_follower_selector.classList.add("nj-cursor-follower-hover-effect");
                });
                el.addEventListener('mouseout', function () {
                    self._cursor_follower_selector.classList.remove("nj-cursor-follower-hover-effect");
                });
            });

            // Blend effect
            document.querySelectorAll('[data-cursor-effect="blend"]').forEach(function (el) {
                el.addEventListener('mouseover', function () {
                    self._cursor_follower_selector.classList.add("nj-cursor-follower-blend-effect");
                });
                el.addEventListener('mouseout', function () {
                    self._cursor_follower_selector.classList.remove("nj-cursor-follower-blend-effect");
                });
            });

            // Exclusion effect
            document.querySelectorAll('[data-cursor-effect="exclusion"]').forEach(function (el) {
                el.addEventListener('mouseover', function () {
                    self._cursor_follower_selector.classList.add("nj-cursor-follower-exclusion-effect");
                });
                el.addEventListener('mouseout', function () {
                    self._cursor_follower_selector.classList.remove("nj-cursor-follower-exclusion-effect");
                });
            });

            // Hide when cursor is out of document
            document.addEventListener('mouseleave', function (e) {
                self._is_visible = false;
                self.toggle_visibility();
            });

            // Show when cursor is back in document
            document.addEventListener('mouseenter', function (e) {
                self._is_visible = true;
                self.toggle_visibility();

            });
        },

        animate_cursor_follower: function () {
            let self = this;
            self._x += (self.__x - self._x - self._cursor_follower_margin) / self._cursor_follower_delay;
            self._y += (self.__y - self._y - self._cursor_follower_margin) / self._cursor_follower_delay;
            self._cursor_follower_selector.style.top = self._y + 'px';
            self._cursor_follower_selector.style.left = self._x + 'px';
            requestAnimationFrame(this.animate_cursor_follower.bind(self));
        }
    };


    /* -----------------------
* 3D Scene render
* --------------------- */
    // TODO: warning if not loaded
    NJ.three = function () {


        /* Init scene */
        let scene = new THREE.Scene();


        /* General light */
        let light = new THREE.DirectionalLight('#FFACFD', 4);
        light.position.set(-20, 0, 100);
        scene.add(light);


        /* Default camera */
        let camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 1000);


        /* Renderer */
        let renderer = new THREE.WebGLRenderer({antialias: true});
        renderer.setSize(window.innerWidth, window.innerHeight);
        $('#nj-three-block').append(renderer.domElement);


        /* Clock */
        let clock = new THREE.Clock();


        /* Scene Loader */
        let nj_mixer;
        let loader = new THREE.GLTFLoader();
        let model_url = './models/model.glb';


        /* Draco loader */
        let dracoLoader = new THREE.DRACOLoader();
        dracoLoader.setDecoderPath('js/draco/gltf/');
        loader.setDRACOLoader(dracoLoader);

        loader.load(model_url, function (gltf) {
            const nj_scene = gltf.scene;

            nj_scene.traverse((o) => {
                if (o.isLight) {

                    /* Reduce blue light */
                    if (o.name === "light2_Orientation") {
                        o.intensity = 2;
                        o.position.x = -8;
                        o.position.y = 4.2;
                    }
                }
            });

            let blender_camera = gltf.cameras[0];

            camera.position.x = blender_camera.parent.position.x;
            camera.position.y = blender_camera.parent.position.y - 2.3;
            camera.position.z = blender_camera.parent.position.z;

            camera.aspect = blender_camera.aspect;
            camera.fov = blender_camera.fov;
            camera.far = blender_camera.far;
            camera.near = blender_camera.near;

            scene.add(nj_scene);
            nj_mixer = new THREE.AnimationMixer(nj_scene);


            /* Play one animation */
            let action = nj_mixer.clipAction(gltf.animations[0]);
            action.play();


            /* Play all animations */
            gltf.animations.forEach((clip) => {
                nj_mixer.clipAction(clip).play();
            });

        });


        /* Mouse lights */
        let mouse = {
            x: 0,
            y: 0
        };

        let sphere_size = 0.0001; // 0.1 for debug, 0.0001 for production

        let light_1_color = 0xff0040;
        let sphere_1 = new THREE.SphereBufferGeometry(sphere_size, 16, 8);
        let light_1 = new THREE.PointLight(light_1_color, 1, 50);
        light_1.add(new THREE.Mesh(sphere_1, new THREE.MeshBasicMaterial({color: light_1_color})));
        light_1.position.set(0, 0, 5);
        scene.add(light_1);

        let light_2_color = 0x00FF29;
        let sphere_2 = new THREE.SphereBufferGeometry(sphere_size, 16, 8);
        let light_2 = new THREE.PointLight(light_2_color, 0.3, 50);
        light_2.add(new THREE.Mesh(sphere_2, new THREE.MeshBasicMaterial({color: light_2_color})));
        light_2.position.set(0, 0, 5);
        scene.add(light_2);

        let light_3_color = 0x00FFF1;
        let sphere_3 = new THREE.SphereBufferGeometry(sphere_size, 16, 8);
        let light_3 = new THREE.PointLight(light_3_color, 1, 50);
        light_3.add(new THREE.Mesh(sphere_3, new THREE.MeshBasicMaterial({color: light_3_color})));
        light_3.position.set(0, 0, 5);
        scene.add(light_3);

        document.addEventListener('mousemove', onMouseMove, false);

        function onMouseMove(event) {
            /* Update the mouse variable */
            event.preventDefault();
            mouse.x = (event.clientX / window.innerWidth) * 2 - 1;
            mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;

            let vector = new THREE.Vector3(mouse.x, mouse.y, 0.5);
            vector.unproject(camera);

            let dir = vector.sub(camera.position).normalize();
            let distance = -camera.position.z / dir.z;
            let pos = camera.position.clone().add(dir.multiplyScalar(distance));

            light_1.position.copy(pos);
            light_1.position.z = 2;

            light_2.position.copy({
                x: pos.x - mouse.x,
                y: mouse.y,
                z: 5
            });

            light_3.position.copy({
                x: pos.x - mouse.x,
                y: mouse.y + pos.y,
                z: 6
            });
        }

        camera.aspect = window.innerWidth / window.innerHeight;
        camera.updateProjectionMatrix();

        function on_window_resize() {
            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();
            renderer.setSize(window.innerWidth, window.innerHeight);
        }

        window.addEventListener('resize', on_window_resize, false);


        /* Animate the elements */
        function animate() {
            requestAnimationFrame(animate);
            render();
        }


        /* Rendering function */
        function render() {
            let delta = clock.getDelta();
            if (nj_mixer) {
                nj_mixer.update(delta);
            }
            renderer.render(scene, camera);
        }

        animate();

    };


    /* -----------------------
    * On DOM ready
    * --------------------- */
    $(function () {

        /* Three.js test */
        if ("undefined" !== typeof window.THREE && $("#nj-three-block").length) {
            page_has_three = true;
            $(document.body).addClass("nj-page-has-three");
        }

        /* Responsive helpers */
        let $responsive_indicator = "<div id='nj-responsive-indicator'></div>";
        $("body").prepend($responsive_indicator);

        /* Cursor init */
        if (NJ.settings.custom_cursor) {
            NJ.custom_cursor.init();
        }

        /* Animation init */
        if (NJ.settings.on_scroll_animation) {
            NJ.on_scroll_animation();
        }

        /* Other functions */
        NJ.team_slider();
        NJ.scroll_to_link();
        NJ.scroll_to_top();
        NJ.scroll_spy();
        NJ.testimonials();
        NJ.mobile_menu();
        NJ.portfolio();
        NJ.single_project_popups();

        if(page_has_three){
            NJ.three();
        }

    });

})(jQuery);
